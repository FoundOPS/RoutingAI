using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using RoutingAI.Algorithms.Interfaces;
using RoutingAI.DataContracts;

namespace RoutingAI.Algorithms.AntColonyOptimizer
{
    /// <summary>
    /// Dummy filter that does absolutely no filtering.
    /// </summary>
    class DummyConstraintFilter : ConstraintFilterBase
    {
        /// <summary>
        /// Constructor
        /// </summary>
        /// <param name="resource">Resource group the filter is filtering for</param>
        /// <param name="optimized">Confidence-adjusted time window of all already optimized tasks</param>
        /// <param name="unvisited">Collection of unvisited tasks to filter</param>
        /// <param name="path">Path generated by optimizer up to this point</param>
        public DummyConstraintFilter(Resource resource, Window optimized, ICollection<Task> unvisited, IList<Task> path)
            : base(resource, optimized, unvisited, path)
        {
        }

        public override bool CanLink(Task current, Task next)
        {
            return true;    // Dummy method, no filtering
        }
    }
}
